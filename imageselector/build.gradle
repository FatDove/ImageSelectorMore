apply plugin: 'com.android.library'

group='com.github.donkingliang' // 指定group，com.github.<用户名>

android {
    compileSdkVersion 29
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
//    api 'com.android.support:appcompat-v7:27.0.2'
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'androidx.appcompat:appcompat:1.0.0'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    annotationProcessor 'androidx.annotation:annotation:1.1.0'

//    //点击大图控件
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    api 'com.facebook.fresco:fresco:1.7.1'
    api 'de.greenrobot:eventbus:3.0.0-beta1'
    api 'com.shuyu:GSYVideoPlayer:2.0.8'

}

//---------------------------------------------

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}